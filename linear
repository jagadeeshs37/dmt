# -----------------------------
# House Price Prediction with Linear Regression
# Dataset: kc_house_data.csv
# -----------------------------

# 1. Import Libraries
from google.colab import files
import pandas as pd
import numpy as np
import matplotlib.pyplot as plt
import seaborn as sns
import io

from sklearn.model_selection import train_test_split
from sklearn.linear_model import LinearRegression
from sklearn.metrics import mean_squared_error, r2_score

# 2. Upload Dataset
print("Please upload kc_house_data.csv")
uploaded = files.upload()

# Load into pandas DataFrame
data = pd.read_csv(io.BytesIO(uploaded['kc_house_data.csv']))

# 3. Basic Info
print("\nDataset Preview:\n", data.head())
print("\nDataset Info:\n")
print(data.info())
print("\nSummary Statistics:\n", data.describe())

# 4. Feature Selection
# We will use a subset of meaningful features
features = ["sqft_living", "bedrooms", "bathrooms", "floors", "sqft_lot", "grade"]
X = data[features]
y = data["price"]

# 5. Train-Test Split
X_train, X_test, y_train, y_test = train_test_split(X, y, test_size=0.2, random_state=42)

# 6. Train Linear Regression Model
model = LinearRegression()
model.fit(X_train, y_train)

# 7. Model Coefficients
print("\nIntercept (b0):", model.intercept_)
coef_df = pd.DataFrame(model.coef_, features, columns=["Coefficient"])
print("\nFeature Coefficients:\n", coef_df)

# 8. Predictions
y_pred = model.predict(X_test)

# 9. Evaluation Metrics
mse = mean_squared_error(y_test, y_pred)
rmse = np.sqrt(mse)
r2 = r2_score(y_test, y_pred)

print("\nModel Performance:")
print("Mean Squared Error:", mse)
print("Root Mean Squared Error:", rmse)
print("RÂ² Score:", r2)

# 10. Actual vs Predicted Plot
plt.figure(figsize=(8,6))
plt.scatter(y_test, y_pred, alpha=0.5, color="blue")
plt.plot([y.min(), y.max()], [y.min(), y.max()], color="red", linestyle="--")
plt.xlabel("Actual Price")
plt.ylabel("Predicted Price")
plt.title("Actual vs Predicted House Prices")
plt.show()

# 11. Correlation Heatmap
plt.figure(figsize=(10,6))
sns.heatmap(data[features + ["price"]].corr(), annot=True, cmap="coolwarm")
plt.title("Correlation Heatmap of Selected Features")
plt.show()


using kc house data
